@model WebSite.Models.ViewModels.AdditionalFieldsViewModel
@if (Model.CollectionAdditionalFields != null && Model.CollectionAdditionalFields.Count > 0)
{
    <div id="div_boxAdditionalFieldSection" data-referenceid="@Model.ReferenceID">
        @foreach (var item in Model.CollectionAdditionalFields)
        {
        if (item.Enabled)
        {
        <div class="@item.ColsBootstrapCssClass">
            <div class="form-group">

                @if (item.DataTypeControl.ToLower() != "date" && item.DataTypeControl.ToLower() != "checkbox")
                {
                    <label class="control-label">@item.FieldName</label>
                    <span class="input-icon input-icon-prepend @item.FieldIcon"></span>
                    if (item.DataTypeControl.ToLower() == "text")
                    {
                        if (item.FieldLength > 130)
                        {
                            <textarea rows="@item.TextAreaRows" maxlength="@item.FieldLength" class="additional-field max-lenght @item.CssClass" @Model.disabled data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" data-valueid="@item.TableAdditionalFieldValueID">@item.FieldValue</textarea>
                        }
                        else
                        {
                            <input type="text" maxlength="@item.FieldLength" class="additional-field max-lenght @item.CssClass" @Model.disabled value="@item.FieldValue" data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" data-valueid="@item.TableAdditionalFieldValueID" />
                        }
                    }
                    else if (item.DataTypeControl.ToLower() == "decimal")
                    {
                        <input type="text" maxlength="@item.FieldLength" class="additional-field max-lenght onlydecimalsprecision @item.CssClass" @Model.disabled value="@item.FieldValue" data-precision="@item.FieldPrecision" data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" data-valueid="@item.TableAdditionalFieldValueID" />
                    }
                    else if (item.DataTypeControl.ToLower() == "number")
                    {
                        <input type="text" maxlength="@item.FieldLength" class="additional-field max-lenght onlynumbers @item.CssClass" @Model.disabled value="@item.FieldValue" data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" data-valueid="@item.TableAdditionalFieldValueID" />
                    }
                    else if (item.DataTypeControl.ToLower() == "select")
                    {

                        <select class="additional-field form-control da-chosen-select select @item.CssClass" title="@Resources.Common.chsn_SelectOption" @Model.disabled data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" data-valueid="@item.TableAdditionalFieldValueID">
                            @foreach (var option in item.CatalogContext)
                            {
                                if (item.FieldValue.AsInt() == option.CatalogDetailID)
                                {
                                    <option selected value="@(option.CatalogDetailID == 0 ? "":option.CatalogDetailID.ToString())">@option.DisplayText</option>
                                }
                                else if (option.CatalogDetailID == 0)
                                {
                                    <option value="">@option.DisplayText</option>
                                }
                                else
                                {
                                    <option value="@option.CatalogDetailID.ToString()">@option.DisplayText</option>
                                }
                            }
                        </select>
                    }
                }
                else if (item.DataTypeControl.ToLower() == "date")
                {
                    <label class="control-label">@item.FieldName</label>
                    <div class="input-group date ad-datepicker">
                        <span class="input-group-addon"><i class="@item.FieldIcon"></i></span>
                        @if (string.IsNullOrEmpty(item.FieldValue))
                        {
                            <input type="text" class="additional-field form-control @item.CssClass" placeholder="@item.FieldName" value="@DateTime.Now.ToString("yyyy-MM-dd")" @Model.disabled data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" data-valueid="@item.TableAdditionalFieldValueID" />
                        }
                        else
                        {
                            <input type="text" class="additional-field form-control @item.CssClass" placeholder="@item.FieldName" value="@item.FieldValue.AsDateTime().ToString("yyyy-MM-dd")" @Model.disabled data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" data-valueid="@item.TableAdditionalFieldValueID" />
                        }
                    </div>
                }
                else if (item.DataTypeControl.ToLower() == "checkbox")
                {
                    <div class="form-group">
                        <small class="help-block">
                            <label class="switch-inline switch-xs @item.CssClass">
                                <input type="checkbox" class="additional-field" @Model.disabled data-id="@item.TableAdditionalFieldID" data-mandatory="@item.IsMandatory" data-fieldname="@item.ColumnName" @(item.FieldValue == "true" || item.FieldValue == "1" ? "checked" : "") data-valueid="@item.TableAdditionalFieldValueID" />
                                <i></i>
                            </label>
                            <label>
                                @item.ColumnName
                            </label>
                        </small>
                    </div>
                }
            </div>
        </div>
        }

        }
    </div>

}